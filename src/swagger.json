{
  "openapi": "3.0.0",
  "info": {
    "title": "Node Express Template -> (NET.ts)",
    "description": "Node.js NET.ts RESTful API",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    },
    {
      "url": "https://production.example.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/health": {
      "get": {
        "tags": ["healthcheck"],
        "summary": "Application service health check ðŸ’—",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/account/accountOverview/{address}": {
      "get": {
        "tags": ["account"],
        "summary": "Read account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account address"
          }
        ],
        "responses": {
          "200": {
            "description": "account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/block/number/{number}": {
      "get": {
        "tags": ["read block"],
        "summary": "Read block",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "Block Number"
          }
        ],
        "responses": {
          "200": {
            "description": "block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/block/hash/{hash}": {
      "get": {
        "tags": ["read block"],
        "summary": "Read block",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Block hash"
          }
        ],
        "responses": {
          "200": {
            "description": "block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/block/blockList/{pageNumber}": {
      "get": {
        "tags": ["read block"],
        "summary": "Read block list by page",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"  
            },
            "description": "Page number for block list"
          }
        ],
        "responses": {
          "200": {
            "description": "Block list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseWithMessage"  
                  }
                }
              }
            }
          },
          "404": {
            "description": "Block list not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/block/latestBlockList": {
      "get": {
        "tags": ["read block"],
        "summary": "Read blocks",
        "responses": {
          "200": {
            "description": "block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/block/blockListWithSkip/{skipNum}":{
      "get":{
        "tags":["read block"],
        "summary": "Read block list with skip",
        "parameters": [
          {
            "name": "skipNum",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"  
            },
            "description": "skip number for block list"
          }
        ],
        "responses": {
          "200": {
            "description": "Block list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseWithMessage"  
                  }
                }
              }
            }
          },
          "404": {
            "description": "Block list not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": ["read user"],
        "summary": "Read user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "tags": ["create user"],
        "description": "Create user",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Provide API-key (ie. API_KEY_TOKEN from .env.locals file)"
          }
        ],
        "requestBody": {
          "description": "Input data required to create new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseWithMessage"
                }
              }
            }
          },
          "401": {
            "description": "Access forbidden. Incorrect x-api-key!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/transaction": {
      "get": {
        "tags": ["retrieve transactions"],
        "description": "Retrieve all transactions",
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TransactionInput"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/transaction/{hashId}": {
      "get": {
        "tags": ["retrieve transactions"],
        "description": "Retrieve a transaction by hash",
        "parameters": [
          {
            "name": "hashId",
            "in": "path",
            "description": "The hashId of the transaction to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionInput"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserInput": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string",
            "default": "John Doe"
          },
          "email": {
            "type": "string",
            "default": "john.d@example.net"
          }
        }
      },
      "TransactionInput": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "block": {
            "type": "integer"
          },
          "senderAddress": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "receiverAddress": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "gasPrice": {
            "type": "number"
          },
          "transactionFee": {
            "type": "number"
          },
          "gasLimit": {
            "type": "number"
          },
          "gasUsed": {
            "type": "number"
          },
          "gasFees": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["hash", "block", "senderAddress", "amount", "receiverAddress", "value", "gasPrice", "transactionFee", "gasLimit", "gasUsed", "gasFees", "timestamp"]
      },
      "ResponseWithMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}
